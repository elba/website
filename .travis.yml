sudo: required

language: python
python:
  - "2.7"

services:
  - docker

addons:
  apt:
    packages:
      - docker-ce

cache: yarn

before_install:
  - docker --version
  - pip install awscli
  - pip install ansible
  # Install yarn
  - sudo apt-key adv --fetch-keys http://dl.yarnpkg.com/debian/pubkey.gpg
  - echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq yarn
  - cd deploy

script:
  - yarn --cwd ../frontend build
  - bash ./docker-build-image.sh

deploy:
  # Push elba/registry image to aws ecr
  - provider: script
    script: 
      - bash ./docker-push-image.sh
    on:
      branch: master

  # Deploy frontend public to s3 bucket
  - provider: s3
    access_key_id: "${AWS_ACCESS_KEY}"
    secret_access_key: "${AWS_SECRET_KEY}"
    bucket: "${AWS_S3_BUCKET_NAME}"
    region: "${AWS_REGION}"
    local_dir: ../public
    on:
      branch: master

  # Pull and run registry image remotely by ansible
  - provider: script
    script: 
      - openssl enc -d -des-ecb -k $ENCRYPT_KEY
        -in docker-compose.prod.yml.enc -out docker-compose.prod.yml &&
        openssl enc -d -des-ecb -k $ENCRYPT_KEY
        -in key.pem.enc -out key.pem &&
        chmod 600 key.pem &&
        echo "$REGISTRY_DOMAIN" > inventory &&
        export ANSIBLE_HOST_KEY_CHECKING=false &&
        ansible-playbook -i inventory -u $REGISTRY_USER --private-key key.pem playbook.yml
    on:
      branch: master
